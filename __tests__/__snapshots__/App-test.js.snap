// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Add movie modal renders correctly 1`] = `ShallowWrapper {}`;

exports[`App renders correctly 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "backgroundColor": "#131313",
      "flex": 1,
    }
  }
  testID="homeScreenContainer"
>
  <View
    style={
      Object {
        "alignItems": "center",
        "justifyContent": "center",
        "marginBottom": 15,
        "marginTop": 15,
        "paddingHorizontal": 15,
      }
    }
  >
    <Image
      source={
        Object {
          "testUri": "../../../app/assets/images/Header.png",
        }
      }
      style={
        Object {
          "height": 42,
          "resizeMode": "contain",
          "width": "100%",
        }
      }
    />
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "borderRadius": 50,
        "bottom": 20,
        "height": 62,
        "justifyContent": "center",
        "position": "absolute",
        "right": 17,
        "width": 62,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "stretch",
          "borderRadius": 50,
          "elevation": 2,
          "height": 56,
          "shadowColor": "#000000",
          "shadowOffset": Object {
            "height": 1,
            "width": 0,
          },
          "shadowOpacity": 0.8,
          "shadowRadius": 2,
          "width": 56,
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#E50914",
            "borderRadius": 50,
            "flex": 1,
            "justifyContent": "center",
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "transform": Array [
                Object {
                  "scaleX": 1,
                },
                Object {
                  "rotate": "0deg",
                },
              ],
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#FFFFFF",
                "fontSize": 24,
              }
            }
            testID="actionButton"
          >
            +
          </Text>
        </View>
      </View>
    </View>
  </View>
  <View
    testID="addMovieModal"
  >
    <Modal
      animationType="none"
      deviceHeight={1334}
      deviceWidth={750}
      hardwareAccelerated={false}
      hideModalContentWhileAnimating={false}
      onBackdropPress={[Function]}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      onRequestClose={[Function]}
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
      testID="addMovieModal"
      transparent={true}
      visible={false}
    >
      <View
        accessible={true}
        focusable={true}
        forwardedRef={[Function]}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "black",
            "bottom": 0,
            "height": 1334,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "width": 750,
          }
        }
      />
      <View
        deviceHeight={1334}
        deviceWidth={750}
        forwardedRef={[Function]}
        hideModalContentWhileAnimating={false}
        onBackdropPress={[Function]}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        pointerEvents="box-none"
        scrollHorizontal={false}
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "center",
            "flex": 1,
            "justifyContent": "center",
            "margin": 37.5,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
          }
        }
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
      >
        <View
          onLayout={[Function]}
        >
          <View
            style={
              Object {
                "bottom": 0,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#131313",
                  "borderRadius": 10,
                  "height": 933.8,
                  "padding": 15,
                  "width": 675,
                }
              }
              testID="addMovieModal"
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "flex-end",
                    "marginBottom": 5,
                    "width": "100%",
                  }
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                />
              </View>
              <Text
                style={
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 24,
                    "fontWeight": "bold",
                    "marginBottom": 15,
                  }
                }
              >
                Enter Movie Details
              </Text>
              <RCTScrollView
                contentContainerStyle={
                  Object {
                    "alignItems": "center",
                    "paddingTop": 10,
                  }
                }
                showsVerticalScrollIndicator={false}
                style={
                  Object {
                    "height": "100%",
                    "width": "100%",
                  }
                }
              >
                <View>
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                        "opacity": 1,
                        "width": "100%",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "height": 150,
                          "marginBottom": 15,
                          "width": 135,
                        }
                      }
                    >
                      <Image
                        source={
                          Object {
                            "testUri": "../../../app/assets/images/default_poster.jpg",
                          }
                        }
                        style={
                          Object {
                            "height": "100%",
                            "resizeMode": "contain",
                            "width": 135,
                          }
                        }
                      />
                    </View>
                  </View>
                  <TextInput
                    allowFontScaling={true}
                    autoCapitalize="none"
                    autoCompleteType="off"
                    autoCorrect={false}
                    onChangeText={[Function]}
                    placeholder="Movie Title"
                    placeholderTextColor="#BABABA"
                    rejectResponderTermination={true}
                    selectionColor="#E50914"
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#333333",
                          "borderRadius": 6,
                          "color": "#FFFFFF",
                          "fontSize": 18,
                          "fontWeight": "500",
                          "height": 50,
                          "paddingHorizontal": 15,
                          "width": "100%",
                        },
                        Object {
                          "marginBottom": 10,
                        },
                        Object {},
                      ]
                    }
                    testID="movieTitle"
                    underlineColorAndroid="transparent"
                    value={null}
                  />
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "backgroundColor": "#333333",
                        "borderRadius": 6,
                        "height": 50,
                        "justifyContent": "center",
                        "marginBottom": 10,
                        "opacity": 1,
                        "paddingHorizontal": 15,
                        "width": "100%",
                      }
                    }
                  >
                    <Text
                      style={
                        Array [
                          Object {
                            "fontSize": 18,
                            "fontWeight": "500",
                          },
                          Object {
                            "color": "#BABABA",
                          },
                        ]
                      }
                      testID="datePicker"
                    >
                      Release Date
                    </Text>
                  </View>
                  <TextInput
                    allowFontScaling={true}
                    autoCapitalize="none"
                    autoCompleteType="off"
                    autoCorrect={false}
                    description={true}
                    multiline={true}
                    onChangeText={[Function]}
                    placeholder="Description"
                    placeholderTextColor="#BABABA"
                    rejectResponderTermination={true}
                    selectionColor="#E50914"
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#333333",
                          "borderRadius": 6,
                          "color": "#FFFFFF",
                          "fontSize": 18,
                          "fontWeight": "500",
                          "height": 50,
                          "paddingHorizontal": 15,
                          "width": "100%",
                        },
                        Object {},
                        Object {
                          "height": 100,
                        },
                      ]
                    }
                    testID="overview"
                    underlineColorAndroid="transparent"
                    value={null}
                  />
                </View>
              </RCTScrollView>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "flex-end",
                    "marginTop": 15,
                    "width": "100%",
                  }
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#BABABA",
                      "borderRadius": 6,
                      "justifyContent": "center",
                      "opacity": 1,
                      "padding": 15,
                      "width": 75,
                    }
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#FFFFFF",
                        "fontSize": 16,
                        "fontWeight": "500",
                      }
                    }
                    testID="submitMovie"
                  >
                    Save
                  </Text>
                </View>
              </View>
            </View>
            <View
              testID="datePickerModal"
            >
              <Modal
                animationType="none"
                deviceHeight={1334}
                deviceWidth={750}
                hardwareAccelerated={false}
                hideModalContentWhileAnimating={false}
                onBackdropPress={[Function]}
                onModalHide={[Function]}
                onModalWillHide={[Function]}
                onModalWillShow={[Function]}
                onRequestClose={[Function]}
                scrollHorizontal={false}
                scrollOffset={0}
                scrollOffsetMax={0}
                scrollTo={null}
                supportedOrientations={
                  Array [
                    "portrait",
                    "landscape",
                  ]
                }
                swipeThreshold={100}
                transparent={true}
                visible={false}
              >
                <View
                  accessible={true}
                  focusable={true}
                  forwardedRef={[Function]}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "backgroundColor": "black",
                      "bottom": 0,
                      "height": 1334,
                      "left": 0,
                      "opacity": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                      "width": 750,
                    }
                  }
                />
                <View
                  deviceHeight={1334}
                  deviceWidth={750}
                  forwardedRef={[Function]}
                  hideModalContentWhileAnimating={false}
                  onBackdropPress={[Function]}
                  onModalHide={[Function]}
                  onModalWillHide={[Function]}
                  onModalWillShow={[Function]}
                  pointerEvents="box-none"
                  scrollHorizontal={false}
                  scrollOffset={0}
                  scrollOffsetMax={0}
                  scrollTo={null}
                  style={
                    Object {
                      "alignItems": "center",
                      "alignSelf": "center",
                      "flex": 1,
                      "justifyContent": "center",
                      "margin": 37.5,
                      "transform": Array [
                        Object {
                          "translateY": 0,
                        },
                      ],
                      "zIndex": 10,
                    }
                  }
                  supportedOrientations={
                    Array [
                      "portrait",
                      "landscape",
                    ]
                  }
                  swipeThreshold={100}
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#131313",
                        "borderRadius": 10,
                        "justifyContent": "center",
                        "paddingVertical": 15,
                        "width": 630,
                      }
                    }
                  >
                    <RNDatePicker
                      date={1610555513833}
                      minuteInterval={1}
                      mode="date"
                      onChange={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Array [
                          Object {
                            "height": 216,
                            "width": 310,
                          },
                          undefined,
                        ]
                      }
                      textColor="#FFFFFF"
                    />
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "justifyContent": "flex-end",
                          "paddingHorizontal": 15,
                          "width": "100%",
                        }
                      }
                    >
                      <Text
                        onPress={[Function]}
                        style={
                          Object {
                            "color": "#E50914",
                            "fontSize": 18,
                            "fontWeight": "bold",
                          }
                        }
                        testID="pickingDateDone"
                      >
                        Done
                      </Text>
                    </View>
                  </View>
                </View>
              </Modal>
            </View>
          </View>
        </View>
      </View>
    </Modal>
  </View>
</RCTSafeAreaView>
`;

exports[`Home renders correctly 1`] = `ShallowWrapper {}`;

exports[`Movies List Component renders correctly 1`] = `ShallowWrapper {}`;

exports[`My Movie List Component renders correctly 1`] = `ShallowWrapper {}`;
